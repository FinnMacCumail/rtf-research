{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AI Research Portfolio","text":"<p>Welcome! This site documents ongoing research into LLM-based planning, retrieval, and developer tooling.</p> <ul> <li>Phase 1 \u2013 TMDB Chatbox: goals, architecture, techniques, and lessons learned.</li> <li>Phase 2 \u2013 NetBox MCP + Claude Code: integration design, MCP orchestration,   pagination and knowledge-graph strategies.</li> </ul>"},{"location":"#timeline","title":"Timeline","text":"<pre><code>timeline\n    title Research Timeline (2025)\n    2025-01 : Project kickoff : LLM landscape + tool survey\n    2025-01\u201304 : Phase 1: TMDB chatbox (intent/entity, planning, formatting)\n    2025-05\u201308 : Phase 2: NetBox MCP + Claude Code integration\n    2025-09+ : Knowledge graph &amp; evaluation expansion\n</code></pre>"},{"location":"adr/0001-adopt-mkdocs-material/","title":"ADR-0001 \u2014 Adopt MkDocs Material for Documentation","text":""},{"location":"adr/0001-adopt-mkdocs-material/#context","title":"Context","text":"<p>We need a simple, Markdown-first documentation system that is easy to host on GitHub Pages.</p>"},{"location":"adr/0001-adopt-mkdocs-material/#decision","title":"Decision","text":"<p>Adopt MkDocs Material with a minimal configuration.</p>"},{"location":"adr/0001-adopt-mkdocs-material/#consequences","title":"Consequences","text":"<ul> <li>Low overhead, easy authoring</li> <li>Instant CI/CD to GitHub Pages</li> </ul>"},{"location":"adr/0002-chatbox-architecture/","title":"ADR-0002 \u2014 Chatbox Architecture (Planner/Executor)","text":""},{"location":"adr/0002-chatbox-architecture/#context","title":"Context","text":"<p>A flexible architecture is required to support entity resolution, multi-intent planning, and fallback steps.</p>"},{"location":"adr/0002-chatbox-architecture/#decision","title":"Decision","text":"<p>Use a hybrid approach: - Extraction \u2192 Retrieval \u2192 Planning \u2192 Execution \u2192 Validation \u2192 Formatting - Symbolic constraints and provenance-aware fallbacks</p>"},{"location":"adr/0002-chatbox-architecture/#consequences","title":"Consequences","text":"<ul> <li>Clear separation of concerns</li> <li>Extensible for new domains (TMDB \u2192 NetBox)</li> </ul>"},{"location":"methods/evaluation/","title":"Evaluation","text":"<ul> <li>Functional tests: unit/integration tests for planning, reranking, validation, and formatting</li> <li>Token-boundary tests: ensure pagination/summarization works within LLM context limits</li> <li>Trace analysis: execution traces for understanding multi-step plans and fallbacks</li> </ul>"},{"location":"methods/retrieval-and-planning/","title":"Retrieval &amp; Planning Methods","text":"<ul> <li>Hybrid Retrieval: combine semantic similarity with symbolic metadata filters</li> <li>Symbolic Planner: select endpoints/tools based on detected entities, roles, and constraints</li> <li>Constraint Trees: AND/OR logic across roles (cast, director), companies/networks, and scalars</li> <li>Fallbacks: inject lookups for dependent steps; relax constraints with provenance logging</li> </ul>"},{"location":"methods/tooling/","title":"Tooling","text":"<ul> <li>Claude Code + MCP: orchestration of NetBox tools</li> <li>MKDocs Material: documentation engine</li> <li>Mermaid: diagrams for architecture and timelines</li> <li>GitHub Actions + Pages: docs CI/CD</li> </ul>"},{"location":"phases/phase-1-tmdb/","title":"Phase 1 \u2013 TMDB Chatbox","text":""},{"location":"phases/phase-1-tmdb/#goals","title":"Goals","text":"<ul> <li>Natural-language \u2192 structured TMDB queries</li> <li>Dynamic endpoint selection (<code>/discover/movie</code>, <code>/person</code>, etc.)</li> <li>Multi-entity joins (e.g., \u201cmovies starring A and B\u201d)</li> <li>Response formatting: list, timeline, comparison, fact</li> </ul>"},{"location":"phases/phase-1-tmdb/#architecture","title":"Architecture","text":"<pre><code>flowchart TD\n  Q[User Query] --&gt; C[Intent/Entity Extractor]\n  C --&gt; R[Hybrid Retrieval (semantic+symbolic)]\n  R --&gt; P[Planner &amp; Constraint Engine]\n  P --&gt; E[Endpoint Executor]\n  E --&gt; V[Post-Validation &amp; Rerank]\n  V --&gt; F[Formatter (templates)]\n  F --&gt; A[Answer]\n</code></pre>"},{"location":"phases/phase-1-tmdb/#repo","title":"Repo","text":"<ul> <li>https://github.com/FinnMacCumail/tmdbGPT</li> </ul>"},{"location":"phases/phase-1-tmdb/#highlights","title":"Highlights","text":"<ul> <li>Intent classification tied to TMDB endpoints</li> <li>Entity resolution (people, genres, networks/companies) with produced/consumed parameter mapping</li> <li>Validation &amp; reranking; templates for answers</li> </ul>"},{"location":"phases/phase-2-netbox-mcp/","title":"Phase 2 \u2013 NetBox MCP + Claude Code","text":""},{"location":"phases/phase-2-netbox-mcp/#goals","title":"Goals","text":"<ul> <li>Use MCP tools to interact with NetBox via Claude Code</li> <li>Handle pagination/limits; avoid token overflows</li> <li>Prototype knowledge-graph strategies to avoid N+1 calls</li> </ul>"},{"location":"phases/phase-2-netbox-mcp/#status","title":"Status","text":"<ul> <li>Repo cloned from: https://github.com/Deployment-Team/netbox-mcp</li> <li>Claude Code API integrated and MCP server running locally</li> <li>Next: research-dev UX (prompts, guardrails), performance, KG ingestion plan</li> </ul>"},{"location":"phases/phase-2-netbox-mcp/#demo-scenarios","title":"Demo Scenarios","text":"<ul> <li>\u201cList VLANs\u201d with pagination summary + follow-ups</li> <li>\u201cShow interfaces for device X\u201d with summarization + page-through</li> <li>\u201cExplain cable relationships for device Y\u201d with structured output</li> </ul>"}]}